// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	Username string `json:"username" validate:"max=30,min=6"`
	Password string `json:"password" validate:"max=30,min=6"`
}

type LoginResp struct {
	Token string `json:"token"`
}

type RegisterReq struct {
	Username string `json:"username" validate:"max=30,min=6"`
	Password string `json:"password" validate:"max=30,min=6"`
}

type RegisterResp struct {
	Id       string `json:"id"`
	Username string `json:"username"`
}

type CommonUserResp struct {
	Id       string `json:"id"`
	Username string `json:"username"`
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
	IsAdmin  bool   `json:"is_admin"`
}

type GetInfoReq struct {
	Username string `form:"username"`
}

type GetInfoResp struct {
	Id       string `json:"id"`
	Username string `json:"username"`
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
}

type CommonTagResp struct {
	Id       string `json:"id"`        // 标签ID
	Tag      string `json:"tag"`       // 标签名
	Avatar   string `json:"avatar"`    // tag图标
	QuoteNum int64  `json:"quote_num"` // 引用数
}

type ListTagReq struct {
	Type string `form:"type"`
	Num  int64  `form:"num"`
}

type ListTagResp struct {
	Topics []*CommonTagResp `json:"topics"`
}

type QueryTagReq struct {
	Id string `path:"id"`
}

type QueryTagResp struct {
	*CommonTagResp
}

type Attachment struct {
	Type  string `json:"type"`
	Url   string `json:"url"`
	Label string `json:"label"`
}

type Tag struct {
	Label string `json:"label"` // 标签名
	Value string `json:"value"` // id
}

type CommenPostResp struct {
	Id              string          `json:"id"`
	User            *CommonUserResp `json:"user,omitempty"`
	Contents        string          `json:"contents"`
	Attachments     []*Attachment   `json:"attachments"`
	Tags            []*Tag          `json:"tags,omitempty"`
	CreatedTime     int64           `json:"created_time"` // 创建时间
	UpvoteCount     int64           `json:"upvote_count"`
	CommentCount    int64           `json:"comment_count"`
	CollectionCount int64           `json:"collection_count"`
	CollectStatus   bool            `json:"collect_status"`
	UpvoteStatus    bool            `json:"upvote_status"`
}

type InsertPostReq struct {
	Attachments []*Attachment `json:"attachments"`
	Contents    string        `json:"contents"`
	Tags        []string      `json:"tags"` // 标签
}

type InsertPostResp struct {
	*CommenPostResp
}

type GetDynamicReq struct {
	LastId  string `form:"last_id"`
	PageNum int64  `form:"page_num"`
}

type GetDynamicResp struct {
	List []*CommenPostResp `json:"list,omitempty"`
}

type GetDynamicDetailReq struct {
	Id string `path:"id"`
}

type GetDynamicDetailResp struct {
	*CommenPostResp
}

type QueryDynamicReq struct {
	TagId   string `form:"tag_id"`
	LastId  string `form:"last_id"`
	PageNum int64  `form:"page_num"`
}

type QueryDynamicResp struct {
	List []*CommenPostResp `json:"list,omitempty"`
}

type QueryUserReq struct {
	UserId  string `form:"user_id"`
	LastId  string `form:"last_id"`
	PageNum int64  `form:"page_num"`
}

type QueryUserResp struct {
	List []*CommenPostResp `json:"list,omitempty"`
}

type CommentResp struct {
	Id          string          `json:"id"`
	PostId      string          `json:"post_id"`
	User        *CommonUserResp `json:"user"`
	Content     string          `json:"content"`
	CreatedTime int64           `json:"created_time"`
}

type GetCommentReq struct {
	PostId string `path:"post_id"`
}

type GetCommentResp struct {
	Comments []*CommentResp `json:"comments"`
}

type InsertCoomentReq struct {
	PostId  string `json:"post_id"`
	Content string `json:"content"`
}

type InsertCoomentResp struct {
	*CommentResp
}

type InsertCollectReq struct {
	PostId string `json:"post_id"`
}

type InsertCollectResp struct {
	Status bool `json:"status"`
}

type GetCollectReq struct {
	Offset int64 `form:"offset"`
	Num    int64 `form:"num"`
}

type GetCollectResp struct {
	List []*CommenPostResp `json:"list"`
}

type InsertUpvotedReq struct {
	PostId string `json:"post_id"`
}

type InsertUpvotedResp struct {
	Status bool `json:"status"`
}
