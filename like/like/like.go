// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package like

import (
	"context"

	"git.154896.xyz/zhifou/like/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetNumReq        = pb.GetNumReq
	GetNumResp       = pb.GetNumResp
	GetStatusReq     = pb.GetStatusReq
	GetStatusResp    = pb.GetStatusResp
	InsertUpvoteReq  = pb.InsertUpvoteReq
	InsertUpvoteResp = pb.InsertUpvoteResp

	Like interface {
		GetNum(ctx context.Context, in *GetNumReq, opts ...grpc.CallOption) (*GetNumResp, error)
		InsertUpvote(ctx context.Context, in *InsertUpvoteReq, opts ...grpc.CallOption) (*InsertUpvoteResp, error)
		GetStatus(ctx context.Context, in *GetStatusReq, opts ...grpc.CallOption) (*GetStatusResp, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) GetNum(ctx context.Context, in *GetNumReq, opts ...grpc.CallOption) (*GetNumResp, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.GetNum(ctx, in, opts...)
}

func (m *defaultLike) InsertUpvote(ctx context.Context, in *InsertUpvoteReq, opts ...grpc.CallOption) (*InsertUpvoteResp, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.InsertUpvote(ctx, in, opts...)
}

func (m *defaultLike) GetStatus(ctx context.Context, in *GetStatusReq, opts ...grpc.CallOption) (*GetStatusResp, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.GetStatus(ctx, in, opts...)
}
